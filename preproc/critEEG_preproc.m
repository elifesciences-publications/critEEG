function critEEG_preproc(cfg1, cfg2, outputfile)% called by freqanalysis_peersetup% triggers: baseline, stim or resp% warning off%[pathstr, outname] = fileparts(outputfile);mkdir(pathstr);fprintf('Outputfile: %s\n', outputfile)% tryswitch cfg1.runcfg.preproc.loaddata    case 'yes'        load(fullfile(cfg1.runcfg.preproc.loaddatapath, cfg1.runcfg.PRE, outname))    case 'no'        cfg1 = ft_definetrial(cfg1); % define trials and plot trl                data = ft_preprocessing(cfg1); % preprocess and saveend% reref EOG channels and remove redundant channels% rereference EXG3 and 4 against each other (vert)cfg = [];cfg.channel    = {'EXG3', 'EXG4'};cfg.reref      = 'yes';cfg.refchannel = 'EXG4';data_eogvert      = ft_preprocessing(cfg, data);data_eogvert.label{1} = 'EOGV'; % renamecfg = [];cfg.channel = 'EOGV';data_eogvert   = ft_preprocessing(cfg, data_eogvert); % nothing will be done, only the selection of the interesting channel% rereference EXG1 and 2 against each other (hor)cfg = [];cfg.channel    = {'EXG1', 'EXG2'};cfg.reref      = 'yes';cfg.refchannel = 'EXG2';data_eoghor      = ft_preprocessing(cfg, data);data_eoghor.label{1} = 'EOGH'; % renamecfg = [];cfg.channel = 'EOGH';data_eoghor   = ft_preprocessing(cfg, data_eoghor); % nothing will be done, only the selection of the interesting channeldata = ft_appenddata([], data, data_eogvert, data_eoghor);% this got lost in current ftdata.hdr = data_eoghor.hdr;data.fsample = data_eoghor.fsample;data.trialinfo = data_eoghor.trialinfo;cfg = []; % throw out redundant channelscfg.channel = {'EEG', 'EOGV', 'EOGH'};data      = ft_preprocessing(cfg, data);artfctdef=[];if strcmp(cfg1.artfrej, 'yes')    if strcmp(cfg1.loadartf, 'yes')    else % run artifact routines        cfg_rej = [];        cfg_rej.artfctdef = artfctdef;        cfg_rej.artfctdef.reject = 'complete';                MIBexp_artefact_muscle        cfg_rej.artfctdef.muscle.artifact = artfctdef.muscle.artifact;                data  = ft_rejectartifact(cfg_rej,data);            endend[pathstr, name] = fileparts(outputfile);fprintf('Saving %s to...\n %s\n', name, pathstr)save(outputfile, 'data');